{"ast":null,"code":"var _jsxFileName = \"/home/oof/Desktop/SE_Project (copy)/filmghar/front_end/src/Components/Spinner.js\";\nimport React from 'react';\nimport './Spinner.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Wheel extends React.Component {\n  // const [modalShow, setModalShow] = React.useState(0);\n  constructor(props) {\n    // console.log(props[0])\n    super(props);\n    this.state = {\n      selectedItem: null,\n      modalShow: 0\n    };\n    this.selectItem = this.selectItem.bind(this);\n  }\n\n  selectItem() {\n    if (this.state.selectedItem === null) {\n      const selectedItem = Math.floor(Math.random() * this.props.items.length);\n      console.log(`SELECETD ITEM ${selectedItem}`);\n\n      if (this.props.onSelectItem) {\n        this.props.onSelectItem(selectedItem);\n        console.log(`SELECETD ITEM ${selectedItem}`);\n      }\n\n      this.setState({\n        selectedItem\n      });\n      console.log(`SELECETD ITEM ${selectedItem}`);\n    } else {\n      console.log(`SELECETD ITEM ${this.selectedItem}`);\n      this.setState({\n        selectedItem: null\n      });\n      setTimeout(this.selectItem, 500);\n    }\n  }\n\n  render() {\n    const {\n      selectedItem\n    } = this.state;\n    const {\n      modalShow\n    } = this.state;\n    const {\n      items\n    } = this.props;\n    console.log(items);\n    const wheelVars = {\n      '--nb-item': items.length,\n      '--selected-item': selectedItem\n    };\n    let spinning = selectedItem !== null ? 'spinning' : '';\n    console.log(spinning);\n    {\n      if (modalShow === 1) {\n        // this.setState({ modalShow: 1 });\n        console.log(this.state.modalShow);\n        console.log(\"CHECK MODAL\"); //  return(\n        //  <IntermediateSpinnerModal content={`THIS IS MY POPUP`}\n        //     show={this.state.modalShow}\n        //     onHide={() =>  this.setState({ modalShow: 0 })}\n        //     />\n        //   // return false\n        //  )\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wheel-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `wheel ${spinning}`,\n        style: wheelVars,\n        onClick: this.selectItem,\n        children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wheel-item\",\n          style: {\n            '--item-nb': index\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn textf\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2\",\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/oof/Desktop/SE_Project (copy)/filmghar/front_end/src/Components/Spinner.js"],"names":["React","Wheel","Component","constructor","props","state","selectedItem","modalShow","selectItem","bind","Math","floor","random","items","length","console","log","onSelectItem","setState","setTimeout","render","wheelVars","spinning","map","item","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Spinner.css';\n\nexport default class Wheel extends React.Component {\n  // const [modalShow, setModalShow] = React.useState(0);\n  constructor(props) {\n    // console.log(props[0])\n    super(props);\n    this.state = {\n      selectedItem: null,\n      modalShow: 0\n    };\n    this.selectItem = this.selectItem.bind(this);\n   \n  }\n\n \n  selectItem() {\n    if (this.state.selectedItem === null) {\n      const selectedItem = Math.floor(Math.random() * this.props.items.length);\n      console.log(`SELECETD ITEM ${selectedItem}`)\n      if (this.props.onSelectItem) {\n        this.props.onSelectItem(selectedItem);\n        console.log(`SELECETD ITEM ${selectedItem}`)\n      }\n      this.setState({ selectedItem });\n      console.log(`SELECETD ITEM ${selectedItem}`)\n    } else {\n      console.log(`SELECETD ITEM ${this.selectedItem}`)\n      this.setState({ selectedItem: null });\n      setTimeout(this.selectItem, 500);\n    }\n  \n  }\n\n  render() {\n    const { selectedItem } = this.state;\n    const { modalShow } = this.state;\n    const { items } = this.props;\n    console.log(items)\n\n    const wheelVars = {\n      '--nb-item': items.length,\n      '--selected-item': selectedItem,\n    };\n    let spinning = selectedItem !== null ? 'spinning' : '';\n    console.log(spinning)\n    {\n      \n      if(modalShow === 1) {\n        // this.setState({ modalShow: 1 });\n        console.log(this.state.modalShow);\n        console.log(\"CHECK MODAL\");\n       \n    //  return(\n    //  <IntermediateSpinnerModal content={`THIS IS MY POPUP`}\n    //     show={this.state.modalShow}\n    //     onHide={() =>  this.setState({ modalShow: 0 })}\n    //     />\n    //   // return false\n    //  )\n      \n    }\n      \n    }\n\n    \n    return (\n      <div className=\"wheel-container\">\n        <div className={`wheel ${spinning}`} style={wheelVars} onClick={this.selectItem}>\n          {items.map((item, index) => (\n            <div className=\"wheel-item\" key={index} style={{ '--item-nb': index }}>\n              <button className=\"btn textf\"><div className=\"p-2\">{item}</div></button>\n              \n            </div>\n          ))}\n         \n        </div>\n        \n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}