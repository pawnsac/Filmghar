{"ast":null,"code":"var _jsxFileName = \"/home/oof/Downloads/FilmGhar-master (2)/FilmGhar-master/my-app/src/Components/allFilms.js\",\n    _s = $RefreshSig$();\n\nimport './allFilms.css';\nimport React, { Component } from 'react';\nimport { Card, Row, Col, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport movieData from './dummy.json';\nimport VerticalModal from './VerticalModal.js';\nimport { FaInfoCircle } from 'react-icons/fa';\nimport StarIcon from '@material-ui/icons/Star';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport { Link, Redirect } from 'react-router-dom'; // function AllFilms() {\n//      const [modalShow, setModalShow] = React.useState(0);\n//      const addToWatchlist = (film) => {\n//         /*get watchlist, search for our watchlist, post request to our watchlist*/\n//        /*const wltoadd = watchlists.filter(wl => wl.user_id === user)*/\n//        /*   const [values, setValues] = React.useState({\n//     id: '',\n//     movie_id: '',\n//     review: ''\n//   });\n// */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AllFilms() {\n  _s();\n\n  const [modalShow, setModalShow] = React.useState(0);\n\n  const renderCard = (card, index) => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '16rem',\n        position: \"relative\"\n      },\n      className: \"box2 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: `/movie/${card.id}`,\n          state: {\n            referrer: card\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Card.Img, {\n          variant: \"top\",\n          style: {\n            height: '18rem'\n          },\n          src: card.posterUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: \"color\",\n        style: {\n          height: '12rem',\n          position: \"relative\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [/*#__PURE__*/_jsxDEV(StarIcon, {\n            style: {\n              color: '#D4AF37'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 19\n          }, this), \"  \", card.rating, \" \", /*#__PURE__*/_jsxDEV(FaInfoCircle, {\n            color: \"white\",\n            style: {\n              float: \"right\"\n            },\n            onClick: () => setModalShow(card.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 75\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              className: \"text-color\",\n              style: {\n                position: \"absolute\"\n              },\n              children: card.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"addedbutton\",\n          children: \"ADD TO WATCHLIST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(VerticalModal, {\n          content: card,\n          show: modalShow === card.id,\n          onHide: () => setModalShow(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this) // <Card style={{ width: '18rem' }} className=\"box\">\n    //         <Card.Img variant=\"top\" src={card.image} />\n    //         <Card.Body className=\"color\">\n    //             <Card.Title className=\"text-color\">{card.title}</Card.Title>\n    //             <Card.Text className=\"text-color\">{card.year}</Card.Text>\n    //             <Button variant=\"primary\">Go somewhere</Button>\n    //         </Card.Body>\n    // </Card>\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"txtAllFilms text-color\",\n      children: \"All Films\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid container-fluid\",\n      children: movieData.map(renderCard)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AllFilms, \"lLzmkkdODF5MRqj9RmnuHOgwi38=\");\n\n_c = AllFilms;\n;\nexport default AllFilms;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllFilms\");","map":{"version":3,"sources":["/home/oof/Downloads/FilmGhar-master (2)/FilmGhar-master/my-app/src/Components/allFilms.js"],"names":["React","Component","Card","Row","Col","Button","movieData","VerticalModal","FaInfoCircle","StarIcon","AddCircleIcon","Link","Redirect","AllFilms","modalShow","setModalShow","useState","renderCard","card","index","width","position","pathname","id","state","referrer","height","posterUrl","color","rating","float","title","map"],"mappings":"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","sourcesContent":["import './allFilms.css';\nimport React, { Component } from 'react';\nimport {Card, Row, Col, Button} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport movieData from './dummy.json';\nimport VerticalModal from './VerticalModal.js';\nimport { FaInfoCircle } from 'react-icons/fa';\nimport StarIcon from '@material-ui/icons/Star';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport {Link,Redirect} from 'react-router-dom';\n\n// function AllFilms() {\n//      const [modalShow, setModalShow] = React.useState(0);\n//      const addToWatchlist = (film) => {\n//         /*get watchlist, search for our watchlist, post request to our watchlist*/\n//        /*const wltoadd = watchlists.filter(wl => wl.user_id === user)*/\n//        /*   const [values, setValues] = React.useState({\n//     id: '',\n//     movie_id: '',\n//     review: ''\n//   });\n// */\n\n\nfunction AllFilms() {\n  const [modalShow, setModalShow] = React.useState(0);\n\n    const renderCard = (card, index) => {\n\n    return (\n           \n\n      <Card style={{ width: '16rem', position: \"relative\"}} className=\"box2 rounded\">\n      <Link\n            to={{\n            pathname: `/movie/${card.id}`,\n            state: { referrer: card }\n            }}\n            >\n      <Card.Img variant=\"top\"  style={{height: '18rem' }} src={card.posterUrl} />\n      </Link>\n      < Card.Body className=\"color\"  style={{height: '12rem' , position: \"relative\"}}>\n      <Card.Text ><StarIcon  style={{color: '#D4AF37' }}/>  {card.rating} <FaInfoCircle color=\"white\"  style={{float: \"right\" }}\n      onClick={() => setModalShow(card.id)}/>\n      </Card.Text>\n\n        \n        <Row>\n            <Col>\n                  <Card.Title className=\"text-color\" style = {{position: \"absolute\"}}>{card.title}</Card.Title>\n            </Col>\n            \n                \n        \n        </Row>\n\n        <Button  className = \"addedbutton\" >ADD TO WATCHLIST</Button>\n        <VerticalModal content={card}\n          show={modalShow===card.id}\n          onHide={() => setModalShow(0)}\n          />\n      </Card.Body>\n      {/*<AddCircleIcon fontSize= \"large\" style={{position:\"absolute\" ,marginLeft: \"190px\",color: \"#D4AF37\"}}  />*/}\n      </Card>\n            // <Card style={{ width: '18rem' }} className=\"box\">\n            //         <Card.Img variant=\"top\" src={card.image} />\n            //         <Card.Body className=\"color\">\n            //             <Card.Title className=\"text-color\">{card.title}</Card.Title>\n            //             <Card.Text className=\"text-color\">{card.year}</Card.Text>\n            //             <Button variant=\"primary\">Go somewhere</Button>\n            //         </Card.Body>\n            // </Card>\n\n           \n    )}\n\n    return (\n        <div>\n    <h1 className=\"txtAllFilms text-color\">All Films</h1>\n    <div className=\"grid container-fluid\">{movieData.map(renderCard)}</div>\n        </div>\n    )};\nexport default AllFilms;"]},"metadata":{},"sourceType":"module"}