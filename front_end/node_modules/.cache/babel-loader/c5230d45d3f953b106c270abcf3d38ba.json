{"ast":null,"code":"import _defineProperty from\"/home/oof/Desktop/SE_Project (copy)/filmghar/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/oof/Desktop/SE_Project (copy)/filmghar/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/oof/Desktop/SE_Project (copy)/filmghar/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';var useForm=function useForm(callback,validate){var _useState=useState({username:'',email:'',password:'',password2:''}),_useState2=_slicedToArray(_useState,2),values=_useState2[0],setValues=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),errors=_useState4[0],setErrors=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isSubmitting=_useState6[0],setIsSubmitting=_useState6[1];var $crf_token=$('[name=\"csrfmiddlewaretoken\"]').attr('value');var handleChange=function handleChange(e){var _e$target=e.target,name=_e$target.name,value=_e$target.value;setValues(_objectSpread(_objectSpread({},values),{},_defineProperty({},name,value)));};var handleSubmit=function handleSubmit(e){e.preventDefault();setErrors(validate(values));fetch('api/users/',{method:'POST',headers:{'Content-Type':'application/json',\"X-CSRFToken\":$crf_token},body:JSON.stringify({username:values.username,email:values.email,password:values.password})}).then(function(data){return data.json();}).then(function(data){console.log(data);});setIsSubmitting(true);};useEffect(function(){if(Object.keys(errors).length===0&&isSubmitting){callback();}},[errors]);return{handleChange:handleChange,handleSubmit:handleSubmit,values:values,errors:errors};};export default useForm;","map":{"version":3,"sources":["/home/oof/Desktop/SE_Project (copy)/filmghar/front_end/src/Components/useForm.js"],"names":["useState","useEffect","useForm","callback","validate","username","email","password","password2","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","$crf_token","$","attr","handleChange","e","target","name","value","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","data","json","console","log","Object","keys","length"],"mappings":"wgBAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,QAAD,CAAWC,QAAX,CAAwB,eACVJ,QAAQ,CAAC,CACnCK,QAAQ,CAAE,EADyB,CAEnCC,KAAK,CAAE,EAF4B,CAGnCC,QAAQ,CAAE,EAHyB,CAInCC,SAAS,CAAE,EAJwB,CAAD,CADE,wCAC/BC,MAD+B,eACvBC,SADuB,8BAOVV,QAAQ,CAAC,EAAD,CAPE,yCAO/BW,MAP+B,eAOvBC,SAPuB,8BAQEZ,QAAQ,CAAC,KAAD,CARV,yCAQ/Ba,YAR+B,eAQjBC,eARiB,eAStC,GAAIC,CAAAA,UAAU,CAAGC,CAAC,CAAC,8BAAD,CAAD,CAAkCC,IAAlC,CAAuC,OAAvC,CAAjB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,CAAC,CAAI,eACAA,CAAC,CAACC,MADF,CAChBC,IADgB,WAChBA,IADgB,CACVC,KADU,WACVA,KADU,CAExBZ,SAAS,gCACJD,MADI,wBAENY,IAFM,CAECC,KAFD,GAAT,CAID,CAND,CAQA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAJ,CAAC,CAAI,CACxBA,CAAC,CAACK,cAAF,GAEAZ,SAAS,CAACR,QAAQ,CAACK,MAAD,CAAT,CAAT,CACAgB,KAAK,CAAC,YAAD,CAAe,CAClBC,MAAM,CAAE,MADU,CAElBC,OAAO,CAAE,CAAC,eAAgB,kBAAjB,CACT,cAAeZ,UADN,CAFS,CAIlBa,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBzB,QAAQ,CAAEI,MAAM,CAACJ,QADE,CAEnBC,KAAK,CAAEG,MAAM,CAACH,KAFK,CAGnBC,QAAQ,CAAEE,MAAM,CAACF,QAHE,CAAf,CAJY,CAAf,CAAL,CAWCwB,IAXD,CAWO,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,IAAL,EAAJ,EAXX,EAYCF,IAZD,CAaE,SAAAC,IAAI,CAAI,CACNE,OAAO,CAACC,GAAR,CAAYH,IAAZ,EACD,CAfH,EAiBAlB,eAAe,CAAC,IAAD,CAAf,CACD,CAtBD,CAwBAb,SAAS,CACP,UAAM,CACJ,GAAImC,MAAM,CAACC,IAAP,CAAY1B,MAAZ,EAAoB2B,MAApB,GAA+B,CAA/B,EAAoCzB,YAAxC,CAAsD,CACpDV,QAAQ,GACT,CACF,CALM,CAMP,CAACQ,MAAD,CANO,CAAT,CASA,MAAO,CAAEO,YAAY,CAAZA,YAAF,CAAgBK,YAAY,CAAZA,YAAhB,CAA8Bd,MAAM,CAANA,MAA9B,CAAsCE,MAAM,CAANA,MAAtC,CAAP,CACD,CArDD,CAuDA,cAAeT,CAAAA,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useForm = (callback, validate) => {\n  const [values, setValues] = useState({\n    username: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  var $crf_token = $('[name=\"csrfmiddlewaretoken\"]').attr('value');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setErrors(validate(values));\n    fetch('api/users/', {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json',\n      \"X-CSRFToken\": $crf_token},\n      body: JSON.stringify({\n        username: values.username,\n        email: values.email,\n        password: values.password,\n\n      })\n    })\n    .then( data => data.json())\n    .then(\n      data => {\n        console.log(data);\n      }\n    )\n    setIsSubmitting(true);\n  };\n\n  useEffect(\n    () => {\n      if (Object.keys(errors).length === 0 && isSubmitting) {\n        callback();\n      }\n    },\n    [errors]\n  );\n\n  return { handleChange, handleSubmit, values, errors };\n};\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}