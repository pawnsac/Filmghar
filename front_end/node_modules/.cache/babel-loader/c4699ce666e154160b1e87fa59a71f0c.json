{"ast":null,"code":"import _slicedToArray from\"/home/oof/Desktop/SE_Project (copy)/filmghar/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./allFilms.css';import React,{Component}from'react';import{Card,Row,Col,Button}from'react-bootstrap';import'bootstrap/dist/css/bootstrap.min.css';import movieData from'./dummy.json';import VerticalModal from'./VerticalModal.js';import{FaInfoCircle}from'react-icons/fa';import StarIcon from'@material-ui/icons/Star';import AddCircleIcon from'@material-ui/icons/AddCircle';import{Link,Redirect}from'react-router-dom';// function AllFilms() {\n//      const [modalShow, setModalShow] = React.useState(0);\n//      const addToWatchlist = (film) => {\n//         /*get watchlist, search for our watchlist, post request to our watchlist*/\n//        /*const wltoadd = watchlists.filter(wl => wl.user_id === user)*/\n//        /*   const [values, setValues] = React.useState({\n//     id: '',\n//     movie_id: '',\n//     review: ''\n//   });\n// */\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function AllFilms(){var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),modalShow=_React$useState2[0],setModalShow=_React$useState2[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),movies=_React$useState4[0],setmovies=_React$useState4[1];var fetch1=function fetch1(){fetch('api/allfilms').then(function(response){return response.json();}).then(function(data){console.log(data[0].title);var x=data.length;var changes=data;var y=\"\";var itr=0;var actors=[];while(x!=0){x--;y=changes[x].genres;y=y.split(\",\");console.log(changes[x].genres);console.log(changes[x].actors);console.log(changes[x].images);changes[x].genres=y;y=changes[x].actors;y=y.split(\",\");while(true){if(y[itr]==undefined){break;}actors.push(parseInt(y[itr]));itr++;}changes[x].actors=actors;actors=[];y=changes[x].images;y=y.split(\",\");changes[x].images=y;}setmovies(changes);});};fetch1();var renderCard=function renderCard(card,index){return/*#__PURE__*/_jsxs(Card,{style:{width:'16rem',position:\"relative\"},className:\"box2 rounded\",children:[/*#__PURE__*/_jsx(Link,{to:{pathname:\"/movie/\".concat(card.id),state:{referrer:card}},children:/*#__PURE__*/_jsx(Card.Img,{variant:\"top\",style:{height:'18rem'},src:card.posterUrl})}),/*#__PURE__*/_jsxs(Card.Body,{className:\"color\",style:{height:'12rem',position:\"relative\"},children:[/*#__PURE__*/_jsxs(Card.Text,{children:[/*#__PURE__*/_jsx(StarIcon,{style:{color:'#D4AF37'}}),\"  \",card.rating,\" \",/*#__PURE__*/_jsx(FaInfoCircle,{color:\"white\",style:{float:\"right\"},onClick:function onClick(){return setModalShow(card.id);}})]}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Card.Title,{className:\"text-color\",style:{position:\"absolute\"},children:card.title})})}),/*#__PURE__*/_jsx(Button,{className:\"addedbutton\",children:\"ADD TO WATCHLIST\"}),/*#__PURE__*/_jsx(VerticalModal,{content:card,show:modalShow===card.id,onHide:function onHide(){return setModalShow(0);}})]})]})// <Card style={{ width: '18rem' }} className=\"box\">\n//         <Card.Img variant=\"top\" src={card.image} />\n//         <Card.Body className=\"color\">\n//             <Card.Title className=\"text-color\">{card.title}</Card.Title>\n//             <Card.Text className=\"text-color\">{card.year}</Card.Text>\n//             <Button variant=\"primary\">Go somewhere</Button>\n//         </Card.Body>\n// </Card>\n;};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"txtAllFilms text-color\",children:\"All Films\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid container-fluid\",children:movies.map(renderCard)})]});};export default AllFilms;","map":{"version":3,"sources":["/home/oof/Desktop/SE_Project (copy)/filmghar/front_end/src/Components/allFilms.js"],"names":["React","Component","Card","Row","Col","Button","movieData","VerticalModal","FaInfoCircle","StarIcon","AddCircleIcon","Link","Redirect","AllFilms","useState","modalShow","setModalShow","movies","setmovies","fetch1","fetch","then","response","json","data","console","log","title","x","length","changes","y","itr","actors","genres","split","images","undefined","push","parseInt","renderCard","card","index","width","position","pathname","id","state","referrer","height","posterUrl","color","rating","float","map"],"mappings":"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","sourcesContent":["import './allFilms.css';\nimport React, { Component } from 'react';\nimport {Card, Row, Col, Button} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport movieData from './dummy.json';\nimport VerticalModal from './VerticalModal.js';\nimport { FaInfoCircle } from 'react-icons/fa';\nimport StarIcon from '@material-ui/icons/Star';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport {Link,Redirect} from 'react-router-dom';\n\n// function AllFilms() {\n//      const [modalShow, setModalShow] = React.useState(0);\n//      const addToWatchlist = (film) => {\n//         /*get watchlist, search for our watchlist, post request to our watchlist*/\n//        /*const wltoadd = watchlists.filter(wl => wl.user_id === user)*/\n//        /*   const [values, setValues] = React.useState({\n//     id: '',\n//     movie_id: '',\n//     review: ''\n//   });\n// */\nfunction AllFilms() {\n  const [modalShow, setModalShow] = React.useState(0);\n  const [movies, setmovies] = React.useState([]);\n\nconst fetch1 =  ()=>{\n\n  fetch('api/allfilms')\n  .then (response=>  response.json())\n  .then (data =>{\n      console.log(data[0].title)\n   \n      var x = data.length\n      var changes=data\n      var y=\"\"\n      var itr=0\n      var actors=[]\n      while (x!=0){\n        x--\n        \n        y=changes[x].genres\n        y=y.split(\",\")\n        console.log(changes[x].genres)\n        console.log(changes[x].actors)\n        console.log(changes[x].images)\n        changes[x].genres=y\n        y=changes[x].actors\n        y=y.split(\",\")\n        while(true){\n        if(y[itr]==undefined){\n          break;\n        } \n        actors.push(parseInt(y[itr]))\n        itr++\n        }\n        changes[x].actors=actors\n        actors=[]\n        y=changes[x].images\n        y=y.split(\",\")\n        changes[x].images=y\n        \n\n      }\n      \n      setmovies(changes)\n      }\n      )\n}\nfetch1()\n\n    const renderCard = (card, index) => {\n\n    return (\n           \n\n      <Card style={{ width: '16rem', position: \"relative\"}} className=\"box2 rounded\">\n      <Link\n            to={{\n            pathname: `/movie/${card.id}`,\n            state: { referrer: card }\n            }}\n            >\n      <Card.Img variant=\"top\"  style={{height: '18rem' }} src={card.posterUrl} />\n      </Link>\n      < Card.Body className=\"color\"  style={{height: '12rem' , position: \"relative\"}}>\n      <Card.Text ><StarIcon  style={{color: '#D4AF37' }}/>  {card.rating} <FaInfoCircle color=\"white\"  style={{float: \"right\" }}\n      onClick={() => setModalShow(card.id)}/>\n      </Card.Text>\n\n        \n        <Row>\n            <Col>\n                  <Card.Title className=\"text-color\" style = {{position: \"absolute\"}}>{card.title}</Card.Title>\n            </Col>\n            \n                \n        \n        </Row>\n\n        <Button  className = \"addedbutton\" >ADD TO WATCHLIST</Button>\n        <VerticalModal content={card}\n          show={modalShow===card.id}\n          onHide={() => setModalShow(0)}\n          />\n      </Card.Body>\n      {/*<AddCircleIcon fontSize= \"large\" style={{position:\"absolute\" ,marginLeft: \"190px\",color: \"#D4AF37\"}}  />*/}\n      </Card>\n            // <Card style={{ width: '18rem' }} className=\"box\">\n            //         <Card.Img variant=\"top\" src={card.image} />\n            //         <Card.Body className=\"color\">\n            //             <Card.Title className=\"text-color\">{card.title}</Card.Title>\n            //             <Card.Text className=\"text-color\">{card.year}</Card.Text>\n            //             <Button variant=\"primary\">Go somewhere</Button>\n            //         </Card.Body>\n            // </Card>\n\n           \n    )}\n\n    return (\n        <div>\n    <h1 className=\"txtAllFilms text-color\">All Films</h1>\n    <div className=\"grid container-fluid\">{movies.map(renderCard)}</div>\n        </div>\n    )};\nexport default AllFilms;"]},"metadata":{},"sourceType":"module"}